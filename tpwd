#!/bin/sh
##
## Truncates pwd to specified number of characters
## Copyright (c) 2005-2014 by Michal Nazareicz (mina86/AT/mina86.com)
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, see <http://www.gnu.org/licenses/>.
##
## This is part of Tiny Applications Collection
##   -> http://tinyapps.sourceforge.net/
##


case "${1-}" in --function|--bash|--zsh)
	echo "tpwd: $1 option is deprecated" >&2
	echo "tpwd: simply \". '$0'\" instead" >&2
	echo ". '$0'"
	exit
esac


tpwd() {
	case "${1-}" in
	-[LP]) __tpwd="$(pwd $1)"; shift ;;
	*) __tpwd="$PWD"
	esac

	case "${1-}" in
	-n) shift; set -- '%s' "$@" ;;
	*) set -- '%s\n' "$@"
	esac

	if [ $# -gt 4 ] || ( [ $# -gt 1 ] && [ X"${2#-}" != X"$2" ] ); then
		cat >&2 <<EOF
usage: tpwd [ -L | -P ] [ -n ] [<len> [<trunc> [<tlen>]]]
       source /path/to/tpwd   in interactive shell, define tpwd function
 -L or -P  use  'pwd -L'  or  'pwd -P'  instead of  \$PWD
 -n        don't print new line character at the end
 <len>     maximum length of printed string                         [30]
 <trunc>   string to print at the beginning if pwd was trunced     [...]
 <tlen>    length of <trunc> (useful if using ANSI codes)

It may be used in PS1 varaible to truncate very long PWD's which
normaly would took a whole line (or more), eg:
    PS1='[\\u@\\h \$(tpwd -n 30 {)]\\$ '     # works in bash

EOF
		unset __tpwd
		[ X"${2-}" = X"--help" ] || [ X"${2-}" = X"-h" ]
		set -u
		return $?
	fi

	case $__tpwd in //*)
		__tpwd="${__tpwd#/}"
	esac

	if [ -n "${HOME-}" ] && [ -n "${HOME%/}" ]; then
		case "$__tpwd" in
		"${HOME%/}") __tpwd='~' ;;
		"${HOME%/}"/*) __tpwd='~'/${__tpwd#"${HOME%/}/"}
		esac
	fi

	set -- "$1" "${2-30}" "${3-...}" "${4-}"
	if [ ${#__tpwd} -le "$2" ]; then
		set -- "$1" '' ''
	else
		set -- "$1" $(( $2 - ${4:-${#3}} )) "$3"
		if [ $2 -le 0 ]; then
			__tpwd=$
		elif [ -n "${BASH_VERSION-}${ZSH_VERSION-}" ]; then
			__tpwd=${__tpwd:$(( ${#__tpwd} - $2 ))}
		else
			__tpwd=$(expr "$__tpwd" : '.*\(.\{'$2'\}\)')
		fi
	fi

	set -- "$1" "$3$__tpwd"
	unset __tpwd
	printf "$@"
}

[ -n "${__tpwd_sourcing-}" ] || [ -z "${-##*i*}" ] || tpwd "$@"
