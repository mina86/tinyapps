#!/bin/sh
##
## surun - Wrapper running command via su or sudo
## Copyright 2013 by Michal Nazarewicz (mina86@mina86.com)
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, see <http://www.gnu.org/licenses/>.
##
## This is part of Tiny Applications Collection
##   -> http://tinyapps.sourceforge.net/
##

if [ x"$1" = x--help ] || [ x"$1" = -h ]; then
	cat <<EOF
usage: $0 [ <command> <argument> ... ]

When called with no arguments, launches a root shell.
When called with arguments, runs specified command as root.

Depending on which tool is available, either sudo or su will be used
to become a super-user.  If user is already super-user, calling sudo
or su will be skipped all together.
EOF
	exit 0
fi

if [ $(id -u) -eq 0 ]; then
	if [ $# -eq 0 ]; then
		set -- "${SHELL:-/bin/sh}"
	fi
	exec "$@"
fi

have_sudo () {
	sudo=`which sudo 2>/dev/null`
	test x"$sudo" != x
}

escape() {
	if test=$(printf %q aoeu\ \'\"\ aoeu 2>/dev/null) &&
	   [ "x$test" = "xaoeu\\ \\'\\\"\\ aoeu" ]; then
		printf ' %q' "$@"
	else
		escaped=
		for arg; do
			escaped="$escaped '$(printf %s "$arg" |
			                     sed -e "s/'/'\\\\''/g")'"
		done
		printf %s "$escaped"
	fi
}

if [ $# -eq 0 ]; then
	if have_sudo; then
		"$sudo" -s
	else
		su
	fi
elif have_sudo; then
	"$sudo" "$@"
else
	su -c "$(escape "$@")"
fi
